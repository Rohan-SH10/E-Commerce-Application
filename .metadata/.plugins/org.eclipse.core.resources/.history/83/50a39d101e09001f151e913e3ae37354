package com.ecommerce.retail_electronicsapp.service.impl;

import java.io.IOException;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.ecommerce.retail_electronicsapp.entity.Image;
import com.ecommerce.retail_electronicsapp.enums.ImageType;
import com.ecommerce.retail_electronicsapp.repository.ImageRepository;
import com.ecommerce.retail_electronicsapp.repository.ProductRepository;
import com.ecommerce.retail_electronicsapp.service.ImageService;
import com.ecommerce.retail_electronicsapp.utility.SimpleResponseStructure;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class ImageServiceImpl implements ImageService{

	private SimpleResponseStructure simpleResponseStructure;
	private ImageRepository imageRepository;
	private ProductRepository productRepository;
	@Override
	public ResponseEntity<SimpleResponseStructure> addImage(int productId, String imageType, MultipartFile image) throws IOException  {

		if(!productRepository.existsById(productId))
			throw new RuntimeException();
		try {
			Image i =new Image();
			if(imageType.equalsIgnoreCase("cover")) {
				imageRepository.findByProductIdAndImageType(productId,ImageType.COVER).map(im->{
					im.setImageType(ImageType.OTHER);
					imageRepository.save(im);
					i.setImagesBytes(image.getBytes()).setImageType(ImageType.COVER).setProductId(productId);
					i=imageRepository.save(i);
				}).orElseThrow(()-> new RuntimeException());			
			}
			else {
				i=new Image();
				i.setImagesBytes(image.getBytes()).setImageType(ImageType.COVER).setProductId(productId);
				i=imageRepository.save(i);
			}
		}catch (Exception e) {
			e.getMessage();
		}



		//		imageRepository.save()
		return ResponseEntity.ok(simpleResponseStructure.setMessage("Image Added with id : "+i.getImageId()).setStatus(HttpStatus.OK.value()));
	}


}
